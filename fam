#!/bin/sh

export LLVM_PROFILE_FILE="/tmp/file.profraw"

cc=clang
output=../famc/output
mrustc=../famc/bin/mrustc
debug=
ccflags=
updatedocs=
rustflags=
filter=

. scripts/parse_params.sh || exit 1;

if [ "$clean" = "1" ]; then
        cd c/secp256k1-zkp
        make clean
	cd ../..
        rm -rf .obj/* libtest.a bin/* rust/test_deps/*/target
elif [ "$test" = "1" ] || [ "$fasttest" = "1" ] || [ "$coverage" = "1" ]; then
        ./scripts/secp256k1zkp.sh || exit 1;
        cd c
        for file in *.c
        do
                if [ "${file}" != "main.c" ]; then
                        if [ ! -e ../.obj/${file%.c}.o ] || [ ${file} -nt ../.obj/${file%.c}.o ]; then
                                echo "${cc} ${ccflags} -DTEST -o ../.obj/${file%.c}.o -c -Ic ${file}";
                                ${cc} ${ccflags} -DTEST -o ../.obj/${file%.c}.o -c -Ic ${file} || exit 1;
                        fi
                fi
        done
        cd ..
        ar rcs .obj/libtest.a .obj/*.o || exit 1;
	echo "rustc +nightly -C debuginfo=2 --test rust/mod.rs -o bin/test_fam -L .obj -l static=test -l static=secp256k1 -l static=gmp ${rustflags}"
        rustc +nightly --extern \
                num_integer=.obj/libnum_integer.rlib \
                -C debuginfo=2 --test rust/mod.rs \
                -o bin/test_fam \
                -L .obj \
                -l static=test \
                -l static=secp256k1 -l \
                static=gmp ${rustflags} ||  exit 1;
        ./bin/test_fam ${filter} --test-threads=1 || exit 1;
        if [ "$coverage" = "1" ]; then
                git log -1 > /tmp/coverage.txt || exit 1;
                grcov \
                        /tmp/file.profraw \
                        --branch --binary-path \
                        ./bin > /tmp/coverage.txt || exit 1;
                ./scripts/coverage.sh ${updatedocs}
        fi
elif [ "$all" = "1" ]; then
	ccflags=-O3
	./scripts/secp256k1zkp.sh || exit 1;
	cd c
	for file in *.c
	do
		if [ ! -e ../.obj/${file%.c}.o ] || [ ${file} -nt ../.obj/${file%.c}.o ]; then
			echo "${cc} ${ccflags} -o ../.obj/${file%.c}.o -c -Ic ${file}";
			${cc} ${ccflags} -o ../.obj/${file%.c}.o -c -Ic ${file} || exit 1;
		fi
	done
	cd ..
	if [ "$usemrustc" = "1" ]; then
		echo "${mrustc} --crate-type=lib rust/mod.rs -L${output} --cfg mrustc -o .obj/rust.o -C panic=abort";
		${mrustc} \
			-O --crate-type=lib \
			rust/mod.rs -L${output} \
			--cfg mrustc \
			-o .obj/rust \
			-C panic=abort || exit 1;
	else
		echo "rustc +nightly -C panic=abort -C opt-level=3 --emit=obj --crate-type=lib -o .obj/rust.o rust/mod.rs";
		rustc +nightly \
			${debug} -C \
			panic=abort -C \
			opt-level=3 \
			--emit=obj \
			--crate-type=lib \
			-o .obj/rust.o \
			rust/mod.rs || exit 1;
	fi
	echo "${cc} ${ccflags} -o bin/fam .obj/*.o -L.obj -lsecp256k1";
	${cc} ${ccflags} -o bin/fam .obj/*.o -L.obj -lsecp256k1 || exit 1;
fi
